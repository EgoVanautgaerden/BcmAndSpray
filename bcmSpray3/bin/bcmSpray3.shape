/*************************************************************************************
 *
 * Spray shapes definition
 * 
 * This file contains the definition of graphical figures using the Shapes Language.
 * Refer to http://code.google.com/a/eclipselabs.org/p/spray/ for documentation.
 *************************************************************************************/

//author: Ego Vanautgaerden

//shape fo a content
shape componentShape{
	//main rectangle
	rectangle{
		position(x=0,y=0)
		size(width=140,height=130)
		style(transparency=0.9)
		
		//the rectangle who has everything in himself, normaly it would have 4 rounded corners but due to the rectangles on the bottom who doesn't have rounded corners you onley see the top rounded corners
		rounded-rectangle{
			//code to give in how big the curve must be
			curve(width=20,height=20)
			position(x=20,y=0)
			size(width=100, height=130)
			//the name of the class
			text {
           		size(width=80, height=25)
           		position(x=5,y=5)
           		align (horizontal=center,vertical=middle)
           		//this is used to know where the name must be placed in
            	id = componentText        
        	}
        	//place for all the other components
        	rectangle {
        		//You have to use a compartment to add objects to an object
            	compartment (
            		//you could use the next command in comments if you want this compartement not to been seen, I would like to see this so I did not use it. 
                	//invisible
                	//Layout is to give in, in wich direction the objects must be added
               		layout = vertical
                	//how to stretch
               		stretching(
                		horizontal=true,
                		vertical=true
               		)
                	//how many space there must been kept between the edge of the compartement and the new objects or between objects
               		spacing=5
                	margin=5
                	//this is used so the .spray knows where the objects are placed
               		id = comps
           		)
            	//variables about the rectangle who has the compartement
           		style (line-color=black)
           		position (x=0, y=35)
           		size (width=100, height=95)
       		}
		}
		rectangle {
			compartment (
				layout = vertical
				spacing=5
	            margin=3
	            id = properties
	            stretching(
	            	horizontal=false,
	            	vertical=false
	            )
			)
			position (x=100,y=40)
			size (width=40,height=90)
			style (transparency=0.9)
		}	
		rectangle {
			compartment (
				layout = vertical
				spacing=5
	            margin=3
	            id = properties2
	            stretching(
	            	horizontal=false,
	            	vertical=false
	            )
			)
			position (x=0,y=40)
			size (width=40,height=90)
			style (transparency=0.9)
		}
	}	
}

//The shape for the port objects
shape portShape{
	rectangle {
		position(x=0,y=0)
		size (width=30,height=30)
		text {
			position (x=5,y=1)
			size (width=15,height=15)
			id = portText
		}
	}
	anchor{
		position(x=0,y=15)
		position(x=30,y=15)
	}
}

//The shape for the connection, you have to use connection instead of shape if you want to have a line
connection connectionShape{
	//you can use the style freeform for straigt lines and manhatten (not like in the tutorial menhatten) for curved lines
    connection-type freeform
    style(line-style=solid)
    //if you want an text to your line you have to have a placing for this line 
    placing {
    	//the ofset goes between 0.0 (begin) and 1.0 (end) where 0.5 is the middle of the line
    	//angle is how it has to be placed
    	//radius is the distance trough te line
        position (offset=0.5, radius=10, angle=90)
        text {
            size (width=60, height=20)
            style (font-color=black) 
            id =assocText
        }
    }
    //the placing of the arrow point
    placing {
    	//offset is the end of the line, angle 0 means along the line
    	position(offset=1.0,radius = 0, angle=0)
    	//polygon is the shape used to make a arrow point
    	polygon{
    		//point A
    		point (x=-10,y=10)
    		//point B
    		point (x=0, y=0)
    		//point C
    		point (x=-10, y=-10)
    		//to fill the polygon
    		style (background-color=black)
    	}
    }
}

